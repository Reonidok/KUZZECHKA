<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="В этом блоке мы предоставляем вам краткую информацию для обучения чтобы вы могли ознакомиться" xml:space="preserve">
    <value>In this block, we provide you with a brief information for training so that you can familiarize yourself</value>
  </data>
  <data name="Все за всех и все за одного." xml:space="preserve">
    <value>All for all and all for one.</value>
  </data>
  <data name="Все наши преподаватели и ученики всегда готовы помочь друг другу, если что-то не так." xml:space="preserve">
    <value>All our teachers and students are always ready to help each other if something is wrong.</value>
  </data>
  <data name="Вы можете найти нас во многих городах в разных странах" xml:space="preserve">
    <value>You can find us in many cities in different countries</value>
  </data>
  <data name="Вы можете прочесть наш блок 'О нас' чтобы лучше ознакомится" xml:space="preserve">
    <value>You can read our 'About Us' section to get to know us better.</value>
  </data>
  <data name="Зарегистрироваться" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="И не забывайте." xml:space="preserve">
    <value>And don't forget.</value>
  </data>
  <data name="Многие из нас готовы вам помочь, в изучении того или иного языка ведь это весело." xml:space="preserve">
    <value>Many of us are ready to help you, because it's fun to learn a language.</value>
  </data>
  <data name="Мы все одна большая семья." xml:space="preserve">
    <value>We are all one big family.</value>
  </data>
  <data name="Мы лучшие." xml:space="preserve">
    <value>We are the best.</value>
  </data>
  <data name="Мы предоставляем услуги" xml:space="preserve">
    <value>We provide services</value>
  </data>
  <data name="Наша компания поможет вам пройти практику в одном из наших офисов расположенных в мире." xml:space="preserve">
    <value>Our company will help you to complete an internship in one of our offices located in the world.</value>
  </data>
  <data name="Наши уроки помогут вам общаться с разными людьми на многих языках" xml:space="preserve">
    <value>Our lessons will help you communicate with different people in many languages</value>
  </data>
  <data name="Перейти" xml:space="preserve">
    <value>Move to</value>
  </data>
  <data name="Подробнее" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="Политика" xml:space="preserve">
    <value>Policy</value>
  </data>
  <data name="Политика нашей компании с которой вы можете ознакомиться для дальнейшего с нами сотрудничества" xml:space="preserve">
    <value>The policy of our company with which you can read for further cooperation with us</value>
  </data>
  <data name="Помните о практике." xml:space="preserve">
    <value>Remember to practice.</value>
  </data>
  <data name="Почему именно мы." xml:space="preserve">
    <value>Why us.</value>
  </data>
  <data name="Проходите наши уроки" xml:space="preserve">
    <value>Check out our lessons</value>
  </data>
  <data name="Теория" xml:space="preserve">
    <value>Theory</value>
  </data>
  <data name="Тесты" xml:space="preserve">
    <value>Test's</value>
  </data>
  <data name="Тесты на которые вы можете ответить на разных языках и позже мы сообщим вам о результате" xml:space="preserve">
    <value>Tests that you can answer in different languages and we will inform you about the result later</value>
  </data>
  <data name="У нас есть Офисы" xml:space="preserve">
    <value>We have offices</value>
  </data>
  <data name="Узнать больше" xml:space="preserve">
    <value>To learn more</value>
  </data>
</root>