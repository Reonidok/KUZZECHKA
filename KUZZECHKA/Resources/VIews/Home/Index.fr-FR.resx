<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="В этом блоке мы предоставляем вам краткую информацию для обучения чтобы вы могли ознакомиться" xml:space="preserve">
    <value>Dans ce bloc, nous vous fournissons une brève information pour la formation afin que vous puissiez vous familiariser</value>
  </data>
  <data name="Все за всех и все за одного." xml:space="preserve">
    <value>Tous pour tous et tous pour un.</value>
  </data>
  <data name="Все наши преподаватели и ученики всегда готовы помочь друг другу, если что-то не так." xml:space="preserve">
    <value>Tous nos professeurs et étudiants sont toujours prêts à s'entraider si quelque chose ne va pas.</value>
  </data>
  <data name="Вы можете найти нас во многих городах в разных странах" xml:space="preserve">
    <value>Vous pouvez nous trouver dans de nombreuses villes de différents pays</value>
  </data>
  <data name="Вы можете прочесть наш блок 'О нас' чтобы лучше ознакомится" xml:space="preserve">
    <value>Vous pouvez lire notre section "À propos de nous" pour mieux nous connaître.</value>
  </data>
  <data name="Зарегистрироваться" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="И не забывайте." xml:space="preserve">
    <value>Et n'oubliez pas.</value>
  </data>
  <data name="Многие из нас готовы вам помочь, в изучении того или иного языка ведь это весело." xml:space="preserve">
    <value>Beaucoup d'entre nous sont prêts à vous aider, car c'est amusant d'apprendre une langue.</value>
  </data>
  <data name="Мы все одна большая семья." xml:space="preserve">
    <value>Nous sommes tous une grande famille.</value>
  </data>
  <data name="Мы лучшие." xml:space="preserve">
    <value>Nous sommes les meilleurs.</value>
  </data>
  <data name="Мы предоставляем услуги" xml:space="preserve">
    <value>Nous fournissons des services</value>
  </data>
  <data name="Наша компания поможет вам пройти практику в одном из наших офисов расположенных в мире." xml:space="preserve">
    <value>Notre entreprise vous aidera à effectuer un stage dans l'un de nos bureaux situés dans le monde.</value>
  </data>
  <data name="Наши уроки помогут вам общаться с разными людьми на многих языках" xml:space="preserve">
    <value>Nos leçons vous aideront à communiquer avec différentes personnes dans de nombreuses langues</value>
  </data>
  <data name="Перейти" xml:space="preserve">
    <value>Aller</value>
  </data>
  <data name="Подробнее" xml:space="preserve">
    <value>Plus</value>
  </data>
  <data name="Политика" xml:space="preserve">
    <value>Politique</value>
  </data>
  <data name="Политика нашей компании с которой вы можете ознакомиться для дальнейшего с нами сотрудничества" xml:space="preserve">
    <value>La politique de notre entreprise avec laquelle vous pouvez lire pour une coopération ultérieure avec nous</value>
  </data>
  <data name="Помните о практике." xml:space="preserve">
    <value>N'oubliez pas de pratiquer.</value>
  </data>
  <data name="Почему именно мы." xml:space="preserve">
    <value>Pourquoi nous.</value>
  </data>
  <data name="Проходите наши уроки" xml:space="preserve">
    <value>Découvrez nos cours</value>
  </data>
  <data name="Теория" xml:space="preserve">
    <value>Théorie</value>
  </data>
  <data name="Тесты" xml:space="preserve">
    <value>Essais</value>
  </data>
  <data name="Тесты на которые вы можете ответить на разных языках и позже мы сообщим вам о результате" xml:space="preserve">
    <value>Des tests auxquels vous pouvez répondre dans différentes langues et nous vous informerons du résultat plus tard</value>
  </data>
  <data name="У нас есть Офисы" xml:space="preserve">
    <value>Nous avons des bureaux</value>
  </data>
  <data name="Узнать больше" xml:space="preserve">
    <value>Pour apprendre plus</value>
  </data>
</root>