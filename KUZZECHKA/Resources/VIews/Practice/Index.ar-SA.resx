<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="text-1" xml:space="preserve">
    <value>&lt;div class = "container"&gt;
     الصفة هي جزء من الكلام يدل على علامة كائن. &lt;br /&gt;
     الصفة تجيب على الأسئلة: "ماذا؟" ، "ماذا؟" ، "ماذا؟" &lt;br /&gt;
     الصفات النوعية لها ميزة ثابتة - هم
     لها أشكال طويلة وقصيرة. &lt;br /&gt;
     تفاصيل هذه المقالة الأنواع
     يتم إعطاء نسب شكلين وأمثلة توضيحية للتوحيد
     مادة. &lt;br /&gt;
     ما هي أشكال الصفات؟ &lt;br /&gt;
     في اللغة الروسية ، يتم تمييز الأشكال الكاملة والقصيرة من الصفات.
     &lt;br /&gt;
     &lt;br /&gt;
     هذه الميزة النحوية دائمة وهي خاصة بـ
     صفة الجودة: &lt;br /&gt;
     &lt;ul style = "list-style: none"&gt;
         &lt;li&gt;
             1. الصفات الكاملة - الأشكال المنسوبة ، المنحرفة
             (تغيير حسب الجنس ، العدد ، الحالات) ، محايد في المعنى. في
             غالبًا ما تستخدم الجمل كتعاريف. أمثلة
             الصفات الكاملة: جاف ، بارد ، أحمر ، أنيق.
         &lt;/li&gt;
         &lt;li&gt;
             2. الصفات القصيرة - التنبؤية ، الأشكال غير القابلة للإلغاء
             (التغيير فقط حسب الجنس والعدد ، لا ترفض حسب الحالات) ،
             تختلف في القيمة الدفترية. المقترحات عادة ما تشمل
             المسند الاسمي. أمثلة على الصفات القصيرة: بعيد ، شاب ، أبيض ،
             وديع.
         &lt;/li&gt;
     &lt;/ul&gt;
     &lt;br /&gt;
     أنواع النسب للصيغ الكاملة والقصيرة للصفات. &lt;br /&gt;
     لا تحتوي الأشكال الكاملة والقصيرة للصفات على كل الكلمات الخاصة بهذا
     أجزاء من الكلام. &lt;br /&gt;
     من خلال وجود (أو عدم) هذه القواعد النحوية
     تنقسم الصفات إلى ثلاث مجموعات:
     &lt;br /&gt;
     &lt;br /&gt;
     &lt;ul style = "list-style: none"&gt;
         &lt;li&gt;
             1. الصفات التي لها أشكال كاملة وقصيرة
             (الجيد هو جيد ، البهجة هي البهجة ، الطازجة طازجة ، الذكية هي ذكية). مختصر
             تتشكل النماذج عن طريق إضافة صفات مختصرة إلى الجذع
             النهايات -а (-я) ، -о (-е) ، -ы (-и) والصفر (لطيف - لطيف ، قوي -
             قطعا).
         &lt;/li&gt;
         &lt;li&gt;
             2. الصفات التي لها شكل كامل فقط. وتشمل هذه -
             الصفات مع لاحقات التقييم (طويل ، أخضر) ،
             صفات الجودة تتكون من الصفات النسبية (القهوة ،
             بني ، حليبي) ، استدعاء ألوان الحيوانات (خليج ، بني) و
             الصفات غير المشتقة (أجنبية ، سابقة).
         &lt;/li&gt;
         &lt;li&gt;
             3. الصفات التي لها شكل قصير فقط
             (صغير جدًا ، ضروري ، كثير ، سعيد).
         &lt;/li&gt;
     &lt;/ul&gt;
&lt;/div&gt;</value>
  </data>
  <data name="text-2" xml:space="preserve">
    <value>&lt;div class="container"&gt;
    الاسم هو جزء من الكلام يشير إلى كائن و
    يتغير حسب الحالات والأرقام. &lt;br /&gt;
    يعتبر جنس الأسماء ميزة نحوية ثابتة.
    تعتبر فئة الأسماء من السمات النحوية ،
    التي تعطينا معلومات حول الانتماء العام لكائن ما ، وهو كائن حي
    الوجود أو الظاهرة أو غيابها. &lt;br /&gt;
    * فقط الأسماء في صيغة المفرد لها جنس.
    &lt;br /&gt; &lt;br /&gt;
    ثلاثة أنواع من الأسماء: &lt;br /&gt;
    &lt;ul style="list-style: none"&gt;

        &lt;li&gt;
            1. ذكر - هو ، لي. &lt;br /&gt;
            الأسماء المذكر في الحالة الاسمية &lt;br /&gt;
            المفرد له نهايات -а و -я و صفر. &lt;br /&gt;
            أمثلة على الأسماء المذكر: أخ ، طاولة ، أب ، نسر. &lt;br /&gt;
        &lt;/li&gt;
        &lt;li&gt;
            2. أنثى - هي ، لي.
            الأسماء المؤنثة الاسمية
            المفرد له نهايات -а و -я و صفر.
            أمثلة على الأسماء المؤنثة: الأرض ، القط ، الحب. &lt;br /&gt;
        &lt;/li&gt;
        &lt;li&gt;
            3. متوسط ​​- إنه لي. &lt;br /&gt;
            الأسماء المحايدة في الحالة الاسمية &lt;br /&gt;
            المفرد له نهايات -о ، -е. &lt;br /&gt;
            أمثلة على الأسماء المحايدة: الفضة ، الشمس ، البحيرة.
        &lt;/li&gt;
    &lt;/ul&gt;
    &lt;br /&gt;
    تحديد جنس الأسماء
    يمكن تحديد جنس الاسم بالقواعد النحوية
    شكل الصفة المرتبطة به. &lt;br /&gt;
    مثل هذا: &lt;br /&gt;
    &lt;ul style="list-style: none"&gt;
        &lt;li&gt;
            1. تتفق الأسماء المذكرية مع الصفات ،
            التي تجيب على الأسئلة: من؟ أيّ؟ (سترة حمراء كبيرة
            صندوق)؛
        &lt;/li&gt;
        &lt;li&gt;
            2. تتفق الأسماء المؤنثة مع الصفات ،
            التي تجيب على الأسئلة: من؟ أيّ؟ (صحافة جديدة ، جار حزين) ؛
        &lt;/li&gt;
        &lt;li&gt;
            3. أسماء الجنس الأوسط تتفق مع الصفات ،
            التي تجيب على الأسئلة: من؟ أيّ؟ (خرخرة القط ، عالية
            مبنى).
        &lt;/li&gt;
    &lt;/ul&gt;
    * لا يمكن تحديد فئة الجنس للكلمات التي
    تستخدم فقط في صيغة الجمع: اليوم ، وورق الحائط ، والجينز ،
    الغميضة ، المقص ، الحبر ، الشطرنج ، الشفق. &lt;br /&gt; &lt;br /&gt;
    الأسماء المتحركة لها نفس جنس الجنس.
    ينتمي إلى كائن حي ، شخص: &lt;br /&gt;
    الجد ، المحاور - الزوج. ص ؛ &lt;br /&gt;
    أخت ، بائعة تم العثور على R. &lt;br /&gt; &lt;br /&gt;
    الإملاء الصحيح: مذكر / مؤنث / محايد
    طيب. &lt;br /&gt;
    لكن هذا خطأ: في المذكر / المؤنث / المحايد. الشيء هو
    أن "في" تعني ميزة غير دائمة. والاسم دائما
    هناك رقم ، حالة ، ودائمًا ما يكون من جنس معين. &lt;br /&gt;
    جنس من الأسماء التي لا تمحى
    الأسماء التي لا يمكن فضحها مستعارة من
    كلمات بلغات أخرى لها نفس القواعد النحوية
    النموذج في جميع الأحوال. &lt;br /&gt;
    لتحديد جنس الاسم غير القابل للإلغاء ، أنت بحاجة
    تأخذ في الاعتبار معنى الكلمة وفئة الحيوية / اللامبالاة.
    الأسماء المتحركة التي تسمي الشخص
    الجنس ، تصنف على أنها مذكر أو مؤنث فيها
    المعنى: &lt;br /&gt;
    المايسترو اللامع - الزوج. ص. &lt;br /&gt;
    مصمم الأزياء الشهير - الزوج. ص. &lt;br /&gt;
    سيدتي الجميلة - زوجات. ص. &lt;br /&gt;
    سيدة شابة - أنثى ص. &lt;br /&gt; &lt;br /&gt;
    الكلمات الأجنبية التي تسمي الطيور والحيوانات لها
    فئة المذكر ، إذا كان السياق لا يشير إلى أنثى: &lt;br /&gt;
    الطائر الطنان اللامع - الزوج. ص. &lt;br /&gt;
    موتلي الببغاء - الزوج. ص. &lt;br /&gt;
    فروي الشمبانزي - زوج. ع &lt;br /&gt;
    الشمبانزي الحذر - أنثى. ص. &lt;br /&gt; &lt;br /&gt;
    في اللغة الروسية ، تحتفظ الكلمات المستعارة بنفس الجنس كما كانت
    في نسخة أجنبية. هذا ما يفسر حقيقة أنه في اللغة الروسية الحديثة
    الكلمات "بيانو" ، "قهوة" ، "كنغر" هي كلمات مذكر. "سالتو" ،
    "الهيكل" و "الدومينو" محايدة و "الشال" أنثوية. &lt;br /&gt;
    غالبًا ما تكون الأسماء غير الحية محايدة: &lt;br /&gt;
    مترو الانفاق نظيف &lt;br /&gt;
    عرض ممتع &lt;br /&gt;
    مقهى دافئ &lt;br /&gt;
    تاكسي سريع. &lt;br /&gt; &lt;br /&gt;
    بعض الأسماء غير الحية لها جنس محدد بواسطة
    الكلمة الرئيسية: &lt;br /&gt;
    كرنب أخضر (ملفوف) - نسائي. ص. &lt;br /&gt;
    سولوجوني مملح (جبن) - زوج. ص. &lt;br /&gt;
    إعصار كبير (إعصار) - زوج. ص. &lt;br /&gt;
    جادة طويلة (شارع) - أنثى. ص. &lt;br /&gt;
    كيوي لذيذ (بيري) - أنثى. ص. &lt;br /&gt;
    التهديف (ركلة حرة) - ذكر. ص. &lt;br /&gt; &lt;br /&gt;
    في الأسماء الجغرافية ، تحتاج إلى فهم نوع الكائن الذي نتحدث عنه.
    وتحدد الجنس بواسطتها: &lt;br /&gt;
    المدينة (بيتر ، Gelendzhik) - زوج. ص. &lt;br /&gt;
    نهر (ميسيسيبي ، الكونغو) - أنثى. ص. &lt;br /&gt;
    بحيرة (بايكال ، أونيغا) - راجع. ص. &lt;br /&gt; &lt;br /&gt;
    يمكن تحديد جنس الاختصارات بالكلمة الرئيسية. لكن قبل
    الاختصار يحتاج إلى فك: &lt;br /&gt;
    واصلت جامعة موسكو الحكومية تجنيد الطلاب. - ولاية موسكو
    واصلت الجامعة تجنيد الطلاب. &lt;br /&gt;
    سيتم إعادة بناء MKAD. - موسك
&lt;/div&gt;</value>
  </data>
  <data name="text-3" xml:space="preserve">
    <value>&lt;div class = "container"&gt;
     الحالة هي فئة نحوية لبعض أجزاء الكلام ،
     مما يساعد على تنسيق الكلمات مع بعضها البعض في جملة. &lt;br /&gt;
     عند تغيير الكلمات على حدة ، فإنها تغير النهاية. &lt;br /&gt; &lt;br /&gt;
     6 حالات للغة الروسية: &lt;br/&gt;
     * الأرقام بين قوسين هي الرقم التسلسلي للقضية باللغة الروسية. &lt;br /&gt; &lt;br /&gt;
     &lt;ul style = "list-style: none"&gt;
         &lt;li style = "padding-bottom: 10px؛"&gt;
             1) الحالة الاسمية (1). هذا هو شكل الكلمة الواردة في
             القاموس. &lt;br /&gt; نتعلم دائمًا كلمات جديدة بالصيغة الترميزية.
             على سبيل المثال: هذا (ماذا؟) منزل. &lt;br /&gt;
             (من؟) أمي تطبخ جيدًا. &lt;br /&gt;
         &lt;/li&gt;
         &lt;li style = "padding-bottom: 10px؛"&gt;
             2) حالة الجر (6). &lt;br /&gt;
             على سبيل المثال: أنا أعيش (أين؟) في مينسك (أين؟) في شارع Chervyakova. &lt;br /&gt;
             أعمل (أين؟) في مدرسة. &lt;br /&gt;
             أختي تدرس (أين؟) في الجامعة. &lt;br /&gt;
         &lt;/li&gt;
         &lt;li style = "padding-bottom: 10px؛"&gt;
             3) حالة النصب (4). &lt;br /&gt;
             على سبيل المثال: أرى (ماذا؟) السماء الزرقاء. &lt;br /&gt;
             أنا أحب (من؟) أمي. &lt;br /&gt;
         &lt;/li&gt;
         &lt;li style = "padding-bottom: 10px؛"&gt;
             4) الحالة الأصلية (3). &lt;br /&gt;
             على سبيل المثال: أنا سعيد (ما؟) الطقس الجيد. &lt;br /&gt;
             أعطي (لمن؟) كتابا لصديق. &lt;br /&gt;
         &lt;/li&gt;
         &lt;li style = "padding-bottom: 10px؛"&gt;
             5) الحالة المضاف إليها (2). &lt;br /&gt;
             على سبيل المثال: ليس لدي (ماذا؟) سيارة. &lt;br /&gt;
             أحب أن أمشي بدون كلب. &lt;br /&gt;
         &lt;/li&gt;
         &lt;li style = "padding-bottom: 10px؛"&gt;
             6) حالة مفيدة (5). &lt;br /&gt;
             على سبيل المثال: لديه (ماذا؟) الأنفلونزا. &lt;br /&gt;
             تعمل (على يد من؟) طبيبة. &lt;br /&gt;
         &lt;/li&gt;
     &lt;/ul&gt;
&lt;/div&gt;</value>
  </data>
  <data name="Аренда жилья" xml:space="preserve">
    <value>تأجير الممتلكات</value>
  </data>
  <data name="В Банке" xml:space="preserve">
    <value>في البنك</value>
  </data>
  <data name="В Больнице" xml:space="preserve">
    <value>في المستشفى</value>
  </data>
  <data name="В Магазине" xml:space="preserve">
    <value>في المحل</value>
  </data>
  <data name="В Спортзале" xml:space="preserve">
    <value>في صالة الألعاب الرياضية</value>
  </data>
  <data name="В Транспорте" xml:space="preserve">
    <value>في النقل</value>
  </data>
  <data name="В Университете" xml:space="preserve">
    <value>في الجامعة</value>
  </data>
  <data name="Имена прилагательные" xml:space="preserve">
    <value>الصفات</value>
  </data>
  <data name="Имена существительные" xml:space="preserve">
    <value>الأسماء</value>
  </data>
  <data name="На Улице" xml:space="preserve">
    <value>في الشارع</value>
  </data>
  <data name="Падежи" xml:space="preserve">
    <value>حالات</value>
  </data>
</root>